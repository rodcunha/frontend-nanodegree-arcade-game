{"version":3,"sources":["js\\app.js"],"names":["Enemy","sprite","x","y","prototype","update","dt","render","ctx","drawImage","Resources","get","Player","console","log","enemyOne","allEnemies","document","addEventListener","e","allowedKeys","player","handleInput","keyCode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAIA,QAAQ,SAARA,KAAQ,GAAW;AACnB;AACA;;AAEA;AACA;AACA,SAAKC,MAAL,GAAc,sBAAd;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACH,CATD;;AAWA;AACA;AACAH,MAAMI,SAAN,CAAgBC,MAAhB,GAAyB,UAASC,EAAT,EAAa;AAClC;AACA;AACA;AACH,CAJD;;AAMA;AACAN,MAAMI,SAAN,CAAgBG,MAAhB,GAAyB,YAAW;AAChCC,QAAIC,SAAJ,CAAcC,UAAUC,GAAV,CAAc,KAAKV,MAAnB,CAAd,EAA0C,KAAKC,CAA/C,EAAkD,KAAKC,CAAvD;AACH,CAFD;;AAIA;AACA;AACA;AACE,IAAIF,SAAS,oBAAb;;IAEIW;AACJ,oBAAYX,MAAZ,EAAoB;AAAA;;AAClB,aAAKA,MAAL,GAAcA,MAAd;AACD;;;;iCACQ;AACPW,mBAAOP,MAAP,GAAgB,cAAM,CAErB,CAFD;AAGD;;;iCACQ,CAER;;;sCACa,CAEb;;;;;;AAEHQ,QAAQC,GAAR,CAAYF,MAAZ;;AAEA;AACA;AACA;;;AAGA,IAAIG,WAAW,IAAIf,KAAJ,EAAf;AACAa,QAAQC,GAAR,CAAYC,QAAZ;;AAEA,IAAMC,aAAa,EAAnB;;AAKA;AACA;AACAC,SAASC,gBAAT,CAA0B,OAA1B,EAAmC,UAASC,CAAT,EAAY;AAC3C,QAAIC,cAAc;AACd,YAAI,MADU;AAEd,YAAI,IAFU;AAGd,YAAI,OAHU;AAId,YAAI;AAJU,KAAlB;;AAOAC,WAAOC,WAAP,CAAmBF,YAAYD,EAAEI,OAAd,CAAnB;AACH,CATD","file":"app.176c1529.map","sourcesContent":["// Enemies our player must avoid\r\nvar Enemy = function() {\r\n    // Variables applied to each of our instances go here,\r\n    // we've provided one for you to get started\r\n\r\n    // The image/sprite for our enemies, this uses\r\n    // a helper we've provided to easily load images\r\n    this.sprite = 'images/enemy-bug.png';\r\n    this.x = 0;\r\n    this.y = 0;\r\n};\r\n\r\n// Update the enemy's position, required method for game\r\n// Parameter: dt, a time delta between ticks\r\nEnemy.prototype.update = function(dt) {\r\n    // You should multiply any movement by the dt parameter\r\n    // which will ensure the game runs at the same speed for\r\n    // all computers.\r\n};\r\n\r\n// Draw the enemy on the screen, required method for game\r\nEnemy.prototype.render = function() {\r\n    ctx.drawImage(Resources.get(this.sprite), this.x, this.y);\r\n};\r\n\r\n// Now write your own player class\r\n// This class requires an update(), render() and\r\n// a handleInput() method.\r\n  let sprite = 'images/cha-boy.png';\r\n\r\nclass Player {\r\n  constructor(sprite) {\r\n    this.sprite = sprite;\r\n  }\r\n  update() {\r\n    Player.update = dt => {\r\n\r\n    }\r\n  }\r\n  render() {\r\n\r\n  }\r\n  handleInput() {\r\n\r\n  }\r\n}\r\nconsole.log(Player);\r\n\r\n// Now instantiate your objects.\r\n// Place all enemy objects in an array called allEnemies\r\n// Place the player object in a variable called player\r\n\r\n\r\nlet enemyOne = new Enemy();\r\nconsole.log(enemyOne);\r\n\r\nconst allEnemies = [];\r\n\r\n\r\n\r\n\r\n// This listens for key presses and sends the keys to your\r\n// Player.handleInput() method. You don't need to modify this.\r\ndocument.addEventListener('keyup', function(e) {\r\n    var allowedKeys = {\r\n        37: 'left',\r\n        38: 'up',\r\n        39: 'right',\r\n        40: 'down'\r\n    };\r\n\r\n    player.handleInput(allowedKeys[e.keyCode]);\r\n});\r\n"]}