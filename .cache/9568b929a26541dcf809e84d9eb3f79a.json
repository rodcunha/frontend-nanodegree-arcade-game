{"dependencies":[{"name":"/Users/rodrigocunha/Desktop/Reps/udacity/nanodegree/frontend-nanodegree-arcade-game/.babelrc","includedInParent":true,"mtime":1522328549826},{"name":"/Users/rodrigocunha/Desktop/Reps/udacity/nanodegree/frontend-nanodegree-arcade-game/package.json","includedInParent":true,"mtime":1522329210964}],"generated":{"js":"var global = (1,eval)(\"this\");\n/* Engine.js\n * This file provides the game loop functionality (update entities and render),\n * draws the initial game board on the screen, and then calls the update and\n * render methods on your player and enemy objects (defined in your app.js).\n *\n * A game engine works by drawing the entire game screen over and over, kind of\n * like a flipbook you may have created as a kid. When your player moves across\n * the screen, it may look like just that image/character is moving or being\n * drawn but that is not the case. What's really happening is the entire \"scene\"\n * is being drawn over and over, presenting the illusion of animation.\n *\n * This engine makes the canvas' context (ctx) object globally available to make\n * writing app.js a little simpler to work with.\n */\n\nvar Engine = function (global) {\n  /* Predefine the variables we'll be using within this scope,\n   * create the canvas element, grab the 2D context for that canvas\n   * set the canvas elements height/width and add it to the DOM.\n   */\n  var doc = global.document,\n      win = global.window,\n      canvas = doc.createElement('canvas'),\n      ctx = canvas.getContext('2d'),\n      lastTime;\n\n  canvas.width = 505;\n  canvas.height = 606;\n  doc.body.appendChild(canvas);\n\n  /* This function serves as the kickoff point for the game loop itself\n   * and handles properly calling the update and render methods.\n   */\n  function main() {\n    /* Get our time delta information which is required if your game\n     * requires smooth animation. Because everyone's computer processes\n     * instructions at different speeds we need a constant value that\n     * would be the same for everyone (regardless of how fast their\n     * computer is) - hurray time!\n     */\n    var now = Date.now(),\n        dt = (now - lastTime) / 1000.0;\n\n    /* Call our update/render functions, pass along the time delta to\n     * our update function since it may be used for smooth animation.\n     */\n    update(dt);\n    render();\n\n    /* Set our lastTime variable which is used to determine the time delta\n     * for the next time this function is called.\n     */\n    lastTime = now;\n\n    /* Use the browser's requestAnimationFrame function to call this\n     * function again as soon as the browser is able to draw another frame.\n     */\n    win.requestAnimationFrame(main);\n  }\n\n  /* This function does some initial setup that should only occur once,\n   * particularly setting the lastTime variable that is required for the\n   * game loop.\n   */\n  function init() {\n    reset();\n    lastTime = Date.now();\n    main();\n  }\n\n  /* This function is called by main (our game loop) and itself calls all\n   * of the functions which may need to update entity's data. Based on how\n   * you implement your collision detection (when two entities occupy the\n   * same space, for instance when your character should die), you may find\n   * the need to add an additional function call here. For now, we've left\n   * it commented out - you may or may not want to implement this\n   * functionality this way (you could just implement collision detection\n   * on the entities themselves within your app.js file).\n   */\n  function update(dt) {\n    updateEntities(dt);\n    // checkCollisions();\n  }\n\n  /* This is called by the update function and loops through all of the\n   * objects within your allEnemies array as defined in app.js and calls\n   * their update() methods. It will then call the update function for your\n   * player object. These update methods should focus purely on updating\n   * the data/properties related to the object. Do your drawing in your\n   * render methods.\n   */\n  function updateEntities(dt) {\n    allEnemies.forEach(function (enemy) {\n      enemy.update(dt);\n    });\n    player.update();\n  }\n\n  /* This function initially draws the \"game level\", it will then call\n   * the renderEntities function. Remember, this function is called every\n   * game tick (or loop of the game engine) because that's how games work -\n   * they are flipbooks creating the illusion of animation but in reality\n   * they are just drawing the entire screen over and over.\n   */\n  function render() {\n    /* This array holds the relative URL to the image used\n     * for that particular row of the game level.\n     */\n    var rowImages = ['images/water-block.png', // Top row is water\n    'images/stone-block.png', // Row 1 of 3 of stone\n    'images/stone-block.png', // Row 2 of 3 of stone\n    'images/stone-block.png', // Row 3 of 3 of stone\n    'images/grass-block.png', // Row 1 of 2 of grass\n    'images/grass-block.png' // Row 2 of 2 of grass\n    ],\n        numRows = 6,\n        numCols = 5,\n        row,\n        col;\n\n    // Before drawing, clear existing canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    /* Loop through the number of rows and columns we've defined above\n     * and, using the rowImages array, draw the correct image for that\n     * portion of the \"grid\"\n     */\n    for (row = 0; row < numRows; row++) {\n      for (col = 0; col < numCols; col++) {\n        /* The drawImage function of the canvas' context element\n         * requires 3 parameters: the image to draw, the x coordinate\n         * to start drawing and the y coordinate to start drawing.\n         * We're using our Resources helpers to refer to our images\n         * so that we get the benefits of caching these images, since\n         * we're using them over and over.\n         */\n        ctx.drawImage(Resources.get(rowImages[row]), col * 101, row * 83);\n      }\n    }\n\n    renderEntities();\n  }\n\n  /* This function is called by the render function and is called on each game\n   * tick. Its purpose is to then call the render functions you have defined\n   * on your enemy and player entities within app.js\n   */\n  function renderEntities() {\n    /* Loop through all of the objects within the allEnemies array and call\n     * the render function you have defined.\n     */\n    allEnemies.forEach(function (enemy) {\n      enemy.render();\n    });\n\n    player.render();\n  }\n\n  /* This function does nothing but it could have been a good place to\n   * handle game reset states - maybe a new game menu or a game over screen\n   * those sorts of things. It's only called once by the init() method.\n   */\n  function reset() {}\n  // noop\n\n\n  /* Go ahead and load all of the images we know we're going to need to\n   * draw our game level. Then set init as the callback method, so that when\n   * all of these images are properly loaded our game will start.\n   */\n  Resources.load(['images/stone-block.png', 'images/water-block.png', 'images/grass-block.png', 'images/enemy-bug.png', 'images/char-boy.png']);\n  Resources.onReady(init);\n\n  /* Assign the canvas' context object to the global variable (the window\n   * object when run in a browser) so that developers can use it more easily\n   * from within their app.js files.\n   */\n  global.ctx = ctx;\n}(this);","map":{"mappings":[{"generated":{"line":2,"column":0},"source":"js/engine.js","original":{"line":1,"column":0}},{"generated":{"line":17,"column":0},"source":"js/engine.js","original":{"line":16,"column":0}},{"name":"Engine","generated":{"line":17,"column":4},"source":"js/engine.js","original":{"line":16,"column":4}},{"generated":{"line":17,"column":13},"source":"js/engine.js","original":{"line":16,"column":14}},{"name":"global","generated":{"line":17,"column":23},"source":"js/engine.js","original":{"line":16,"column":23}},{"generated":{"line":17,"column":29},"source":"js/engine.js","original":{"line":16,"column":14}},{"generated":{"line":17,"column":31},"source":"js/engine.js","original":{"line":16,"column":31}},{"generated":{"line":18,"column":0},"source":"js/engine.js","original":{"line":17,"column":4}},{"generated":{"line":22,"column":0},"source":"js/engine.js","original":{"line":21,"column":4}},{"name":"doc","generated":{"line":22,"column":6},"source":"js/engine.js","original":{"line":21,"column":8}},{"name":"global","generated":{"line":22,"column":12},"source":"js/engine.js","original":{"line":21,"column":14}},{"name":"document","generated":{"line":22,"column":19},"source":"js/engine.js","original":{"line":21,"column":21}},{"generated":{"line":22,"column":27},"source":"js/engine.js","original":{"line":21,"column":4}},{"generated":{"line":23,"column":0},"source":"js/engine.js","original":{"line":21,"column":4}},{"name":"win","generated":{"line":23,"column":6},"source":"js/engine.js","original":{"line":22,"column":8}},{"name":"global","generated":{"line":23,"column":12},"source":"js/engine.js","original":{"line":22,"column":14}},{"name":"window","generated":{"line":23,"column":19},"source":"js/engine.js","original":{"line":22,"column":21}},{"generated":{"line":23,"column":25},"source":"js/engine.js","original":{"line":21,"column":4}},{"generated":{"line":24,"column":0},"source":"js/engine.js","original":{"line":21,"column":4}},{"name":"canvas","generated":{"line":24,"column":6},"source":"js/engine.js","original":{"line":23,"column":8}},{"name":"doc","generated":{"line":24,"column":15},"source":"js/engine.js","original":{"line":23,"column":17}},{"name":"createElement","generated":{"line":24,"column":19},"source":"js/engine.js","original":{"line":23,"column":21}},{"generated":{"line":24,"column":32},"source":"js/engine.js","original":{"line":23,"column":17}},{"generated":{"line":24,"column":33},"source":"js/engine.js","original":{"line":23,"column":35}},{"generated":{"line":24,"column":41},"source":"js/engine.js","original":{"line":23,"column":17}},{"generated":{"line":24,"column":42},"source":"js/engine.js","original":{"line":21,"column":4}},{"generated":{"line":25,"column":0},"source":"js/engine.js","original":{"line":21,"column":4}},{"name":"ctx","generated":{"line":25,"column":6},"source":"js/engine.js","original":{"line":24,"column":8}},{"name":"canvas","generated":{"line":25,"column":12},"source":"js/engine.js","original":{"line":24,"column":14}},{"name":"getContext","generated":{"line":25,"column":19},"source":"js/engine.js","original":{"line":24,"column":21}},{"generated":{"line":25,"column":29},"source":"js/engine.js","original":{"line":24,"column":14}},{"generated":{"line":25,"column":30},"source":"js/engine.js","original":{"line":24,"column":32}},{"generated":{"line":25,"column":34},"source":"js/engine.js","original":{"line":24,"column":14}},{"generated":{"line":25,"column":35},"source":"js/engine.js","original":{"line":21,"column":4}},{"generated":{"line":26,"column":0},"source":"js/engine.js","original":{"line":21,"column":4}},{"name":"lastTime","generated":{"line":26,"column":6},"source":"js/engine.js","original":{"line":25,"column":8}},{"generated":{"line":26,"column":14},"source":"js/engine.js","original":{"line":21,"column":4}},{"name":"canvas","generated":{"line":28,"column":0},"source":"js/engine.js","original":{"line":27,"column":4}},{"name":"width","generated":{"line":28,"column":9},"source":"js/engine.js","original":{"line":27,"column":11}},{"generated":{"line":28,"column":14},"source":"js/engine.js","original":{"line":27,"column":4}},{"generated":{"line":28,"column":17},"source":"js/engine.js","original":{"line":27,"column":19}},{"generated":{"line":28,"column":20},"source":"js/engine.js","original":{"line":27,"column":4}},{"name":"canvas","generated":{"line":29,"column":0},"source":"js/engine.js","original":{"line":28,"column":4}},{"name":"height","generated":{"line":29,"column":9},"source":"js/engine.js","original":{"line":28,"column":11}},{"generated":{"line":29,"column":15},"source":"js/engine.js","original":{"line":28,"column":4}},{"generated":{"line":29,"column":18},"source":"js/engine.js","original":{"line":28,"column":20}},{"generated":{"line":29,"column":21},"source":"js/engine.js","original":{"line":28,"column":4}},{"name":"doc","generated":{"line":30,"column":0},"source":"js/engine.js","original":{"line":29,"column":4}},{"name":"body","generated":{"line":30,"column":6},"source":"js/engine.js","original":{"line":29,"column":8}},{"generated":{"line":30,"column":10},"source":"js/engine.js","original":{"line":29,"column":4}},{"name":"appendChild","generated":{"line":30,"column":11},"source":"js/engine.js","original":{"line":29,"column":13}},{"generated":{"line":30,"column":22},"source":"js/engine.js","original":{"line":29,"column":4}},{"name":"canvas","generated":{"line":30,"column":23},"source":"js/engine.js","original":{"line":29,"column":25}},{"generated":{"line":30,"column":29},"source":"js/engine.js","original":{"line":29,"column":4}},{"generated":{"line":32,"column":0},"source":"js/engine.js","original":{"line":31,"column":4}},{"generated":{"line":35,"column":0},"source":"js/engine.js","original":{"line":34,"column":4}},{"name":"main","generated":{"line":35,"column":11},"source":"js/engine.js","original":{"line":34,"column":13}},{"generated":{"line":35,"column":15},"source":"js/engine.js","original":{"line":34,"column":4}},{"generated":{"line":35,"column":18},"source":"js/engine.js","original":{"line":34,"column":20}},{"generated":{"line":36,"column":0},"source":"js/engine.js","original":{"line":35,"column":8}},{"generated":{"line":42,"column":0},"source":"js/engine.js","original":{"line":41,"column":8}},{"name":"now","generated":{"line":42,"column":8},"source":"js/engine.js","original":{"line":41,"column":12}},{"name":"Date","generated":{"line":42,"column":14},"source":"js/engine.js","original":{"line":41,"column":18}},{"name":"now","generated":{"line":42,"column":19},"source":"js/engine.js","original":{"line":41,"column":23}},{"generated":{"line":42,"column":22},"source":"js/engine.js","original":{"line":41,"column":18}},{"generated":{"line":42,"column":24},"source":"js/engine.js","original":{"line":41,"column":8}},{"generated":{"line":43,"column":0},"source":"js/engine.js","original":{"line":41,"column":8}},{"name":"dt","generated":{"line":43,"column":8},"source":"js/engine.js","original":{"line":42,"column":12}},{"generated":{"line":43,"column":13},"source":"js/engine.js","original":{"line":42,"column":17}},{"name":"now","generated":{"line":43,"column":14},"source":"js/engine.js","original":{"line":42,"column":18}},{"name":"lastTime","generated":{"line":43,"column":20},"source":"js/engine.js","original":{"line":42,"column":24}},{"generated":{"line":43,"column":28},"source":"js/engine.js","original":{"line":42,"column":17}},{"generated":{"line":43,"column":32},"source":"js/engine.js","original":{"line":42,"column":36}},{"generated":{"line":43,"column":38},"source":"js/engine.js","original":{"line":41,"column":8}},{"generated":{"line":45,"column":0},"source":"js/engine.js","original":{"line":44,"column":8}},{"name":"update","generated":{"line":48,"column":0},"source":"js/engine.js","original":{"line":47,"column":8}},{"name":"dt","generated":{"line":48,"column":11},"source":"js/engine.js","original":{"line":47,"column":15}},{"generated":{"line":48,"column":13},"source":"js/engine.js","original":{"line":47,"column":8}},{"name":"render","generated":{"line":49,"column":0},"source":"js/engine.js","original":{"line":48,"column":8}},{"generated":{"line":51,"column":0},"source":"js/engine.js","original":{"line":50,"column":8}},{"name":"lastTime","generated":{"line":54,"column":0},"source":"js/engine.js","original":{"line":53,"column":8}},{"name":"now","generated":{"line":54,"column":15},"source":"js/engine.js","original":{"line":53,"column":19}},{"generated":{"line":54,"column":18},"source":"js/engine.js","original":{"line":53,"column":8}},{"generated":{"line":56,"column":0},"source":"js/engine.js","original":{"line":55,"column":8}},{"name":"win","generated":{"line":59,"column":0},"source":"js/engine.js","original":{"line":58,"column":8}},{"name":"requestAnimationFrame","generated":{"line":59,"column":8},"source":"js/engine.js","original":{"line":58,"column":12}},{"generated":{"line":59,"column":29},"source":"js/engine.js","original":{"line":58,"column":8}},{"name":"main","generated":{"line":59,"column":30},"source":"js/engine.js","original":{"line":58,"column":34}},{"generated":{"line":59,"column":34},"source":"js/engine.js","original":{"line":58,"column":8}},{"generated":{"line":60,"column":0},"source":"js/engine.js","original":{"line":59,"column":5}},{"generated":{"line":62,"column":0},"source":"js/engine.js","original":{"line":61,"column":4}},{"generated":{"line":66,"column":0},"source":"js/engine.js","original":{"line":65,"column":4}},{"name":"init","generated":{"line":66,"column":11},"source":"js/engine.js","original":{"line":65,"column":13}},{"generated":{"line":66,"column":15},"source":"js/engine.js","original":{"line":65,"column":4}},{"generated":{"line":66,"column":18},"source":"js/engine.js","original":{"line":65,"column":20}},{"name":"reset","generated":{"line":67,"column":0},"source":"js/engine.js","original":{"line":66,"column":8}},{"name":"lastTime","generated":{"line":68,"column":0},"source":"js/engine.js","original":{"line":67,"column":8}},{"name":"Date","generated":{"line":68,"column":15},"source":"js/engine.js","original":{"line":67,"column":19}},{"name":"now","generated":{"line":68,"column":20},"source":"js/engine.js","original":{"line":67,"column":24}},{"generated":{"line":68,"column":23},"source":"js/engine.js","original":{"line":67,"column":19}},{"generated":{"line":68,"column":25},"source":"js/engine.js","original":{"line":67,"column":8}},{"name":"main","generated":{"line":69,"column":0},"source":"js/engine.js","original":{"line":68,"column":8}},{"generated":{"line":70,"column":0},"source":"js/engine.js","original":{"line":69,"column":5}},{"generated":{"line":72,"column":0},"source":"js/engine.js","original":{"line":71,"column":4}},{"generated":{"line":81,"column":0},"source":"js/engine.js","original":{"line":80,"column":4}},{"name":"update","generated":{"line":81,"column":11},"source":"js/engine.js","original":{"line":80,"column":13}},{"generated":{"line":81,"column":17},"source":"js/engine.js","original":{"line":80,"column":4}},{"name":"dt","generated":{"line":81,"column":18},"source":"js/engine.js","original":{"line":80,"column":20}},{"generated":{"line":81,"column":20},"source":"js/engine.js","original":{"line":80,"column":4}},{"generated":{"line":81,"column":22},"source":"js/engine.js","original":{"line":80,"column":24}},{"name":"updateEntities","generated":{"line":82,"column":0},"source":"js/engine.js","original":{"line":81,"column":8}},{"name":"dt","generated":{"line":82,"column":19},"source":"js/engine.js","original":{"line":81,"column":23}},{"generated":{"line":82,"column":21},"source":"js/engine.js","original":{"line":81,"column":8}},{"generated":{"line":83,"column":0},"source":"js/engine.js","original":{"line":82,"column":8}},{"generated":{"line":84,"column":0},"source":"js/engine.js","original":{"line":83,"column":5}},{"generated":{"line":86,"column":0},"source":"js/engine.js","original":{"line":85,"column":4}},{"generated":{"line":93,"column":0},"source":"js/engine.js","original":{"line":92,"column":4}},{"name":"updateEntities","generated":{"line":93,"column":11},"source":"js/engine.js","original":{"line":92,"column":13}},{"generated":{"line":93,"column":25},"source":"js/engine.js","original":{"line":92,"column":4}},{"name":"dt","generated":{"line":93,"column":26},"source":"js/engine.js","original":{"line":92,"column":28}},{"generated":{"line":93,"column":28},"source":"js/engine.js","original":{"line":92,"column":4}},{"generated":{"line":93,"column":30},"source":"js/engine.js","original":{"line":92,"column":32}},{"name":"allEnemies","generated":{"line":94,"column":0},"source":"js/engine.js","original":{"line":93,"column":8}},{"name":"forEach","generated":{"line":94,"column":15},"source":"js/engine.js","original":{"line":93,"column":19}},{"generated":{"line":94,"column":22},"source":"js/engine.js","original":{"line":93,"column":8}},{"generated":{"line":94,"column":23},"source":"js/engine.js","original":{"line":93,"column":27}},{"name":"enemy","generated":{"line":94,"column":33},"source":"js/engine.js","original":{"line":93,"column":36}},{"generated":{"line":94,"column":38},"source":"js/engine.js","original":{"line":93,"column":27}},{"generated":{"line":94,"column":40},"source":"js/engine.js","original":{"line":93,"column":43}},{"name":"enemy","generated":{"line":95,"column":0},"source":"js/engine.js","original":{"line":94,"column":12}},{"name":"update","generated":{"line":95,"column":12},"source":"js/engine.js","original":{"line":94,"column":18}},{"generated":{"line":95,"column":18},"source":"js/engine.js","original":{"line":94,"column":12}},{"name":"dt","generated":{"line":95,"column":19},"source":"js/engine.js","original":{"line":94,"column":25}},{"generated":{"line":95,"column":21},"source":"js/engine.js","original":{"line":94,"column":12}},{"generated":{"line":96,"column":0},"source":"js/engine.js","original":{"line":95,"column":9}},{"generated":{"line":96,"column":5},"source":"js/engine.js","original":{"line":93,"column":8}},{"name":"player","generated":{"line":97,"column":0},"source":"js/engine.js","original":{"line":96,"column":8}},{"name":"update","generated":{"line":97,"column":11},"source":"js/engine.js","original":{"line":96,"column":15}},{"generated":{"line":97,"column":17},"source":"js/engine.js","original":{"line":96,"column":8}},{"generated":{"line":98,"column":0},"source":"js/engine.js","original":{"line":97,"column":5}},{"generated":{"line":100,"column":0},"source":"js/engine.js","original":{"line":99,"column":4}},{"generated":{"line":106,"column":0},"source":"js/engine.js","original":{"line":105,"column":4}},{"name":"render","generated":{"line":106,"column":11},"source":"js/engine.js","original":{"line":105,"column":13}},{"generated":{"line":106,"column":17},"source":"js/engine.js","original":{"line":105,"column":4}},{"generated":{"line":106,"column":20},"source":"js/engine.js","original":{"line":105,"column":22}},{"generated":{"line":107,"column":0},"source":"js/engine.js","original":{"line":106,"column":8}},{"generated":{"line":110,"column":0},"source":"js/engine.js","original":{"line":109,"column":8}},{"name":"rowImages","generated":{"line":110,"column":8},"source":"js/engine.js","original":{"line":109,"column":12}},{"generated":{"line":110,"column":20},"source":"js/engine.js","original":{"line":109,"column":24}},{"generated":{"line":110,"column":21},"source":"js/engine.js","original":{"line":110,"column":16}},{"generated":{"line":110,"column":45},"source":"js/engine.js","original":{"line":109,"column":24}},{"generated":{"line":110,"column":47},"source":"js/engine.js","original":{"line":110,"column":44}},{"generated":{"line":111,"column":0},"source":"js/engine.js","original":{"line":111,"column":16}},{"generated":{"line":111,"column":28},"source":"js/engine.js","original":{"line":109,"column":24}},{"generated":{"line":111,"column":30},"source":"js/engine.js","original":{"line":111,"column":44}},{"generated":{"line":112,"column":0},"source":"js/engine.js","original":{"line":112,"column":16}},{"generated":{"line":112,"column":28},"source":"js/engine.js","original":{"line":109,"column":24}},{"generated":{"line":112,"column":30},"source":"js/engine.js","original":{"line":112,"column":44}},{"generated":{"line":113,"column":0},"source":"js/engine.js","original":{"line":113,"column":16}},{"generated":{"line":113,"column":28},"source":"js/engine.js","original":{"line":109,"column":24}},{"generated":{"line":113,"column":30},"source":"js/engine.js","original":{"line":113,"column":44}},{"generated":{"line":114,"column":0},"source":"js/engine.js","original":{"line":114,"column":16}},{"generated":{"line":114,"column":28},"source":"js/engine.js","original":{"line":109,"column":24}},{"generated":{"line":114,"column":30},"source":"js/engine.js","original":{"line":114,"column":44}},{"generated":{"line":115,"column":0},"source":"js/engine.js","original":{"line":115,"column":16}},{"generated":{"line":115,"column":28},"source":"js/engine.js","original":{"line":109,"column":24}},{"generated":{"line":115,"column":29},"source":"js/engine.js","original":{"line":115,"column":44}},{"generated":{"line":116,"column":0},"source":"js/engine.js","original":{"line":109,"column":24}},{"generated":{"line":116,"column":5},"source":"js/engine.js","original":{"line":109,"column":8}},{"generated":{"line":117,"column":0},"source":"js/engine.js","original":{"line":109,"column":8}},{"name":"numRows","generated":{"line":117,"column":8},"source":"js/engine.js","original":{"line":117,"column":12}},{"generated":{"line":117,"column":18},"source":"js/engine.js","original":{"line":117,"column":22}},{"generated":{"line":117,"column":19},"source":"js/engine.js","original":{"line":109,"column":8}},{"generated":{"line":118,"column":0},"source":"js/engine.js","original":{"line":109,"column":8}},{"name":"numCols","generated":{"line":118,"column":8},"source":"js/engine.js","original":{"line":118,"column":12}},{"generated":{"line":118,"column":18},"source":"js/engine.js","original":{"line":118,"column":22}},{"generated":{"line":118,"column":19},"source":"js/engine.js","original":{"line":109,"column":8}},{"generated":{"line":119,"column":0},"source":"js/engine.js","original":{"line":109,"column":8}},{"name":"row","generated":{"line":119,"column":8},"source":"js/engine.js","original":{"line":119,"column":12}},{"generated":{"line":119,"column":11},"source":"js/engine.js","original":{"line":109,"column":8}},{"generated":{"line":120,"column":0},"source":"js/engine.js","original":{"line":109,"column":8}},{"name":"col","generated":{"line":120,"column":8},"source":"js/engine.js","original":{"line":119,"column":17}},{"generated":{"line":120,"column":11},"source":"js/engine.js","original":{"line":109,"column":8}},{"generated":{"line":122,"column":0},"source":"js/engine.js","original":{"line":121,"column":8}},{"name":"ctx","generated":{"line":123,"column":0},"source":"js/engine.js","original":{"line":122,"column":8}},{"name":"clearRect","generated":{"line":123,"column":8},"source":"js/engine.js","original":{"line":122,"column":12}},{"generated":{"line":123,"column":17},"source":"js/engine.js","original":{"line":122,"column":8}},{"generated":{"line":123,"column":18},"source":"js/engine.js","original":{"line":122,"column":22}},{"generated":{"line":123,"column":19},"source":"js/engine.js","original":{"line":122,"column":8}},{"generated":{"line":123,"column":21},"source":"js/engine.js","original":{"line":122,"column":24}},{"generated":{"line":123,"column":22},"source":"js/engine.js","original":{"line":122,"column":8}},{"name":"canvas","generated":{"line":123,"column":24},"source":"js/engine.js","original":{"line":122,"column":26}},{"name":"width","generated":{"line":123,"column":31},"source":"js/engine.js","original":{"line":122,"column":33}},{"generated":{"line":123,"column":36},"source":"js/engine.js","original":{"line":122,"column":8}},{"name":"canvas","generated":{"line":123,"column":38},"source":"js/engine.js","original":{"line":122,"column":39}},{"name":"height","generated":{"line":123,"column":45},"source":"js/engine.js","original":{"line":122,"column":46}},{"generated":{"line":123,"column":51},"source":"js/engine.js","original":{"line":122,"column":8}},{"generated":{"line":125,"column":0},"source":"js/engine.js","original":{"line":124,"column":8}},{"generated":{"line":129,"column":0},"source":"js/engine.js","original":{"line":128,"column":8}},{"name":"row","generated":{"line":129,"column":9},"source":"js/engine.js","original":{"line":128,"column":13}},{"generated":{"line":129,"column":15},"source":"js/engine.js","original":{"line":128,"column":19}},{"generated":{"line":129,"column":16},"source":"js/engine.js","original":{"line":128,"column":8}},{"name":"row","generated":{"line":129,"column":18},"source":"js/engine.js","original":{"line":128,"column":22}},{"name":"numRows","generated":{"line":129,"column":24},"source":"js/engine.js","original":{"line":128,"column":28}},{"generated":{"line":129,"column":31},"source":"js/engine.js","original":{"line":128,"column":8}},{"name":"row","generated":{"line":129,"column":33},"source":"js/engine.js","original":{"line":128,"column":37}},{"generated":{"line":129,"column":38},"source":"js/engine.js","original":{"line":128,"column":8}},{"generated":{"line":129,"column":40},"source":"js/engine.js","original":{"line":128,"column":44}},{"generated":{"line":130,"column":0},"source":"js/engine.js","original":{"line":129,"column":12}},{"name":"col","generated":{"line":130,"column":11},"source":"js/engine.js","original":{"line":129,"column":17}},{"generated":{"line":130,"column":17},"source":"js/engine.js","original":{"line":129,"column":23}},{"generated":{"line":130,"column":18},"source":"js/engine.js","original":{"line":129,"column":12}},{"name":"col","generated":{"line":130,"column":20},"source":"js/engine.js","original":{"line":129,"column":26}},{"name":"numCols","generated":{"line":130,"column":26},"source":"js/engine.js","original":{"line":129,"column":32}},{"generated":{"line":130,"column":33},"source":"js/engine.js","original":{"line":129,"column":12}},{"name":"col","generated":{"line":130,"column":35},"source":"js/engine.js","original":{"line":129,"column":41}},{"generated":{"line":130,"column":40},"source":"js/engine.js","original":{"line":129,"column":12}},{"generated":{"line":130,"column":42},"source":"js/engine.js","original":{"line":129,"column":48}},{"generated":{"line":131,"column":0},"source":"js/engine.js","original":{"line":130,"column":16}},{"name":"ctx","generated":{"line":138,"column":0},"source":"js/engine.js","original":{"line":137,"column":16}},{"name":"drawImage","generated":{"line":138,"column":12},"source":"js/engine.js","original":{"line":137,"column":20}},{"generated":{"line":138,"column":21},"source":"js/engine.js","original":{"line":137,"column":16}},{"name":"Resources","generated":{"line":138,"column":22},"source":"js/engine.js","original":{"line":137,"column":30}},{"name":"get","generated":{"line":138,"column":32},"source":"js/engine.js","original":{"line":137,"column":40}},{"generated":{"line":138,"column":35},"source":"js/engine.js","original":{"line":137,"column":30}},{"name":"rowImages","generated":{"line":138,"column":36},"source":"js/engine.js","original":{"line":137,"column":44}},{"name":"row","generated":{"line":138,"column":46},"source":"js/engine.js","original":{"line":137,"column":54}},{"generated":{"line":138,"column":49},"source":"js/engine.js","original":{"line":137,"column":44}},{"generated":{"line":138,"column":50},"source":"js/engine.js","original":{"line":137,"column":30}},{"generated":{"line":138,"column":51},"source":"js/engine.js","original":{"line":137,"column":16}},{"name":"col","generated":{"line":138,"column":53},"source":"js/engine.js","original":{"line":137,"column":61}},{"generated":{"line":138,"column":59},"source":"js/engine.js","original":{"line":137,"column":67}},{"generated":{"line":138,"column":62},"source":"js/engine.js","original":{"line":137,"column":16}},{"name":"row","generated":{"line":138,"column":64},"source":"js/engine.js","original":{"line":137,"column":72}},{"generated":{"line":138,"column":70},"source":"js/engine.js","original":{"line":137,"column":78}},{"generated":{"line":138,"column":72},"source":"js/engine.js","original":{"line":137,"column":16}},{"generated":{"line":139,"column":0},"source":"js/engine.js","original":{"line":138,"column":13}},{"generated":{"line":140,"column":0},"source":"js/engine.js","original":{"line":139,"column":9}},{"name":"renderEntities","generated":{"line":142,"column":0},"source":"js/engine.js","original":{"line":141,"column":8}},{"generated":{"line":143,"column":0},"source":"js/engine.js","original":{"line":142,"column":5}},{"generated":{"line":145,"column":0},"source":"js/engine.js","original":{"line":144,"column":4}},{"generated":{"line":149,"column":0},"source":"js/engine.js","original":{"line":148,"column":4}},{"name":"renderEntities","generated":{"line":149,"column":11},"source":"js/engine.js","original":{"line":148,"column":13}},{"generated":{"line":149,"column":25},"source":"js/engine.js","original":{"line":148,"column":4}},{"generated":{"line":149,"column":28},"source":"js/engine.js","original":{"line":148,"column":30}},{"generated":{"line":150,"column":0},"source":"js/engine.js","original":{"line":149,"column":8}},{"name":"allEnemies","generated":{"line":153,"column":0},"source":"js/engine.js","original":{"line":152,"column":8}},{"name":"forEach","generated":{"line":153,"column":15},"source":"js/engine.js","original":{"line":152,"column":19}},{"generated":{"line":153,"column":22},"source":"js/engine.js","original":{"line":152,"column":8}},{"generated":{"line":153,"column":23},"source":"js/engine.js","original":{"line":152,"column":27}},{"name":"enemy","generated":{"line":153,"column":33},"source":"js/engine.js","original":{"line":152,"column":36}},{"generated":{"line":153,"column":38},"source":"js/engine.js","original":{"line":152,"column":27}},{"generated":{"line":153,"column":40},"source":"js/engine.js","original":{"line":152,"column":43}},{"name":"enemy","generated":{"line":154,"column":0},"source":"js/engine.js","original":{"line":153,"column":12}},{"name":"render","generated":{"line":154,"column":12},"source":"js/engine.js","original":{"line":153,"column":18}},{"generated":{"line":154,"column":18},"source":"js/engine.js","original":{"line":153,"column":12}},{"generated":{"line":155,"column":0},"source":"js/engine.js","original":{"line":154,"column":9}},{"generated":{"line":155,"column":5},"source":"js/engine.js","original":{"line":152,"column":8}},{"name":"player","generated":{"line":157,"column":0},"source":"js/engine.js","original":{"line":156,"column":8}},{"name":"render","generated":{"line":157,"column":11},"source":"js/engine.js","original":{"line":156,"column":15}},{"generated":{"line":157,"column":17},"source":"js/engine.js","original":{"line":156,"column":8}},{"generated":{"line":158,"column":0},"source":"js/engine.js","original":{"line":157,"column":5}},{"generated":{"line":160,"column":0},"source":"js/engine.js","original":{"line":159,"column":4}},{"generated":{"line":164,"column":0},"source":"js/engine.js","original":{"line":163,"column":4}},{"name":"reset","generated":{"line":164,"column":11},"source":"js/engine.js","original":{"line":163,"column":13}},{"generated":{"line":164,"column":16},"source":"js/engine.js","original":{"line":163,"column":4}},{"generated":{"line":164,"column":19},"source":"js/engine.js","original":{"line":163,"column":21}},{"generated":{"line":164,"column":20},"source":"js/engine.js","original":{"line":165,"column":5}},{"generated":{"line":165,"column":0},"source":"js/engine.js","original":{"line":164,"column":8}},{"generated":{"line":168,"column":0},"source":"js/engine.js","original":{"line":167,"column":4}},{"name":"Resources","generated":{"line":172,"column":0},"source":"js/engine.js","original":{"line":171,"column":4}},{"name":"load","generated":{"line":172,"column":12},"source":"js/engine.js","original":{"line":171,"column":14}},{"generated":{"line":172,"column":16},"source":"js/engine.js","original":{"line":171,"column":4}},{"generated":{"line":172,"column":17},"source":"js/engine.js","original":{"line":171,"column":19}},{"generated":{"line":172,"column":18},"source":"js/engine.js","original":{"line":172,"column":8}},{"generated":{"line":172,"column":42},"source":"js/engine.js","original":{"line":171,"column":19}},{"generated":{"line":172,"column":44},"source":"js/engine.js","original":{"line":173,"column":8}},{"generated":{"line":172,"column":68},"source":"js/engine.js","original":{"line":171,"column":19}},{"generated":{"line":172,"column":70},"source":"js/engine.js","original":{"line":174,"column":8}},{"generated":{"line":172,"column":94},"source":"js/engine.js","original":{"line":171,"column":19}},{"generated":{"line":172,"column":96},"source":"js/engine.js","original":{"line":175,"column":8}},{"generated":{"line":172,"column":118},"source":"js/engine.js","original":{"line":171,"column":19}},{"generated":{"line":172,"column":120},"source":"js/engine.js","original":{"line":176,"column":8}},{"generated":{"line":172,"column":141},"source":"js/engine.js","original":{"line":171,"column":19}},{"generated":{"line":172,"column":142},"source":"js/engine.js","original":{"line":171,"column":4}},{"name":"Resources","generated":{"line":173,"column":0},"source":"js/engine.js","original":{"line":178,"column":4}},{"name":"onReady","generated":{"line":173,"column":12},"source":"js/engine.js","original":{"line":178,"column":14}},{"generated":{"line":173,"column":19},"source":"js/engine.js","original":{"line":178,"column":4}},{"name":"init","generated":{"line":173,"column":20},"source":"js/engine.js","original":{"line":178,"column":22}},{"generated":{"line":173,"column":24},"source":"js/engine.js","original":{"line":178,"column":4}},{"generated":{"line":175,"column":0},"source":"js/engine.js","original":{"line":180,"column":4}},{"name":"global","generated":{"line":179,"column":0},"source":"js/engine.js","original":{"line":184,"column":4}},{"name":"ctx","generated":{"line":179,"column":9},"source":"js/engine.js","original":{"line":184,"column":11}},{"generated":{"line":179,"column":12},"source":"js/engine.js","original":{"line":184,"column":4}},{"name":"ctx","generated":{"line":179,"column":15},"source":"js/engine.js","original":{"line":184,"column":17}},{"generated":{"line":179,"column":18},"source":"js/engine.js","original":{"line":184,"column":4}},{"generated":{"line":180,"column":0},"source":"js/engine.js","original":{"line":185,"column":1}},{"generated":{"line":180,"column":1},"source":"js/engine.js","original":{"line":16,"column":13}},{"generated":{"line":180,"column":2},"source":"js/engine.js","original":{"line":185,"column":3}},{"generated":{"line":180,"column":6},"source":"js/engine.js","original":{"line":16,"column":13}},{"generated":{"line":180,"column":7},"source":"js/engine.js","original":{"line":16,"column":0}}],"sources":{"js/engine.js":"/* Engine.js\n * This file provides the game loop functionality (update entities and render),\n * draws the initial game board on the screen, and then calls the update and\n * render methods on your player and enemy objects (defined in your app.js).\n *\n * A game engine works by drawing the entire game screen over and over, kind of\n * like a flipbook you may have created as a kid. When your player moves across\n * the screen, it may look like just that image/character is moving or being\n * drawn but that is not the case. What's really happening is the entire \"scene\"\n * is being drawn over and over, presenting the illusion of animation.\n *\n * This engine makes the canvas' context (ctx) object globally available to make\n * writing app.js a little simpler to work with.\n */\n\nvar Engine = (function(global) {\n    /* Predefine the variables we'll be using within this scope,\n     * create the canvas element, grab the 2D context for that canvas\n     * set the canvas elements height/width and add it to the DOM.\n     */\n    var doc = global.document,\n        win = global.window,\n        canvas = doc.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        lastTime;\n\n    canvas.width = 505;\n    canvas.height = 606;\n    doc.body.appendChild(canvas);\n\n    /* This function serves as the kickoff point for the game loop itself\n     * and handles properly calling the update and render methods.\n     */\n    function main() {\n        /* Get our time delta information which is required if your game\n         * requires smooth animation. Because everyone's computer processes\n         * instructions at different speeds we need a constant value that\n         * would be the same for everyone (regardless of how fast their\n         * computer is) - hurray time!\n         */\n        var now = Date.now(),\n            dt = (now - lastTime) / 1000.0;\n\n        /* Call our update/render functions, pass along the time delta to\n         * our update function since it may be used for smooth animation.\n         */\n        update(dt);\n        render();\n\n        /* Set our lastTime variable which is used to determine the time delta\n         * for the next time this function is called.\n         */\n        lastTime = now;\n\n        /* Use the browser's requestAnimationFrame function to call this\n         * function again as soon as the browser is able to draw another frame.\n         */\n        win.requestAnimationFrame(main);\n    }\n\n    /* This function does some initial setup that should only occur once,\n     * particularly setting the lastTime variable that is required for the\n     * game loop.\n     */\n    function init() {\n        reset();\n        lastTime = Date.now();\n        main();\n    }\n\n    /* This function is called by main (our game loop) and itself calls all\n     * of the functions which may need to update entity's data. Based on how\n     * you implement your collision detection (when two entities occupy the\n     * same space, for instance when your character should die), you may find\n     * the need to add an additional function call here. For now, we've left\n     * it commented out - you may or may not want to implement this\n     * functionality this way (you could just implement collision detection\n     * on the entities themselves within your app.js file).\n     */\n    function update(dt) {\n        updateEntities(dt);\n        // checkCollisions();\n    }\n\n    /* This is called by the update function and loops through all of the\n     * objects within your allEnemies array as defined in app.js and calls\n     * their update() methods. It will then call the update function for your\n     * player object. These update methods should focus purely on updating\n     * the data/properties related to the object. Do your drawing in your\n     * render methods.\n     */\n    function updateEntities(dt) {\n        allEnemies.forEach(function(enemy) {\n            enemy.update(dt);\n        });\n        player.update();\n    }\n\n    /* This function initially draws the \"game level\", it will then call\n     * the renderEntities function. Remember, this function is called every\n     * game tick (or loop of the game engine) because that's how games work -\n     * they are flipbooks creating the illusion of animation but in reality\n     * they are just drawing the entire screen over and over.\n     */\n    function render() {\n        /* This array holds the relative URL to the image used\n         * for that particular row of the game level.\n         */\n        var rowImages = [\n                'images/water-block.png',   // Top row is water\n                'images/stone-block.png',   // Row 1 of 3 of stone\n                'images/stone-block.png',   // Row 2 of 3 of stone\n                'images/stone-block.png',   // Row 3 of 3 of stone\n                'images/grass-block.png',   // Row 1 of 2 of grass\n                'images/grass-block.png'    // Row 2 of 2 of grass\n            ],\n            numRows = 6,\n            numCols = 5,\n            row, col;\n\n        // Before drawing, clear existing canvas\n        ctx.clearRect(0,0,canvas.width,canvas.height)\n\n        /* Loop through the number of rows and columns we've defined above\n         * and, using the rowImages array, draw the correct image for that\n         * portion of the \"grid\"\n         */\n        for (row = 0; row < numRows; row++) {\n            for (col = 0; col < numCols; col++) {\n                /* The drawImage function of the canvas' context element\n                 * requires 3 parameters: the image to draw, the x coordinate\n                 * to start drawing and the y coordinate to start drawing.\n                 * We're using our Resources helpers to refer to our images\n                 * so that we get the benefits of caching these images, since\n                 * we're using them over and over.\n                 */\n                ctx.drawImage(Resources.get(rowImages[row]), col * 101, row * 83);\n            }\n        }\n\n        renderEntities();\n    }\n\n    /* This function is called by the render function and is called on each game\n     * tick. Its purpose is to then call the render functions you have defined\n     * on your enemy and player entities within app.js\n     */\n    function renderEntities() {\n        /* Loop through all of the objects within the allEnemies array and call\n         * the render function you have defined.\n         */\n        allEnemies.forEach(function(enemy) {\n            enemy.render();\n        });\n\n        player.render();\n    }\n\n    /* This function does nothing but it could have been a good place to\n     * handle game reset states - maybe a new game menu or a game over screen\n     * those sorts of things. It's only called once by the init() method.\n     */\n    function reset() {\n        // noop\n    }\n\n    /* Go ahead and load all of the images we know we're going to need to\n     * draw our game level. Then set init as the callback method, so that when\n     * all of these images are properly loaded our game will start.\n     */\n    Resources.load([\n        'images/stone-block.png',\n        'images/water-block.png',\n        'images/grass-block.png',\n        'images/enemy-bug.png',\n        'images/char-boy.png'\n    ]);\n    Resources.onReady(init);\n\n    /* Assign the canvas' context object to the global variable (the window\n     * object when run in a browser) so that developers can use it more easily\n     * from within their app.js files.\n     */\n    global.ctx = ctx;\n})(this);\n"},"lineCount":null}},"hash":"6f733d878003d5aaabefe48dc682eef9","cacheData":{"env":{}}}